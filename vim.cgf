"VIM IMPORTS"
source ~/.vim/.gh-credentials

"INITIAL CONFIG"
set rtp+=$HOME/.vim/bundle/Vundle.vim
set rtp+=$HOME/.vim/bundle/fzf
set number
set nocompatible
set tabstop=2
set shiftwidth=2
set expandtab
set showmatch
set t_Co=256
set laststatus=2
set hlsearch
set incsearch
set ignorecase
set smartcase
"set autoread | au CursorHold * checktime | call feedkeys("lh")"
set wildignore+=*.swp
set mouse=a
set clipboard+=unnamed
set timeoutlen=1000
set ttimeoutlen=0
set backspace=indent,eol,start
set noshowmode
"set encoding=UTF-8"

syntax enable
colorscheme monokai
"colorscheme xcodedark"
"colorscheme xcodedarkhc"
"colorscheme xcodelight"
"colorscheme xcodelighthc"
"colorscheme xcodewwdc"
filetype off
filetype plugin indent on

"VUNDLE PLUGINS"
call vundle#begin()
Plugin 'Vundle/Vundle.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'tomtom/tcomment_vim'
Plugin 'ntpeters/vim-better-whitespace'
Plugin 'mustache/vim-mustache-handlebars'
Plugin 'mhinz/vim-signify'
Plugin 'itchyny/lightline.vim'
Plugin 'junegunn/fzf'
Plugin 'junegunn/fzf.vim'
Plugin 'itchyny/vim-gitbranch'
Plugin 'Yggdroot/indentLine'
Plugin 'prettier/vim-prettier'
Plugin 'wavded/vim-stylus'
Plugin 'tpope/vim-fugitive'
Plugin 'mattn/webapi-vim'
Plugin 'mattn/vim-gist'
Plugin 'fatih/vim-go'
Plugin 'iamcco/markdown-preview.nvim'
Plugin 'ryanoasis/vim-devicons'
Plugin 'mhinz/vim-startify'
Plugin 'godlygeek/tabular'
Plugin 'preservim/vim-markdown'
Plugin 'sheerun/vim-polyglot'
call vundle#end()

"NERDTREE CONFIG"
function! CloseHiddenBuffers()
    let open_buffers = []

    for i in range(tabpagenr('$'))
        call extend(open_buffers, tabpagebuflist(i + 1))
    endfor

    for num in range(1, bufnr("$") + 1)
        if buflisted(num) && index(open_buffers, num) == -1
            exec "bdelete ".num
        endif
    endfor
endfunction

au BufEnter * call CloseHiddenBuffers()

let NERDTreeShowHidden = 1
let NERDTreeRespectWildIgnore = 1

"FILE ASSOCIATION CONFIG"
au BufReadPost *.cgf set syntax=sh
au BufEnter *.cgf set syntax=sh
au BufReadPost *.tmux set syntax=sh
au BufEnter *.tmux set syntax=sh

"PRETTIER CONFIG"
let g:prettier#config#semi = 'false'
let g:prettier#config#single_quote = 'true'

"SESSION CONFIG"
let g:session_autoload = 0

"LIGHTLINE CONFIG"
let g:lightline = {
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
      \ },
      \ 'component_function': {
      \   'gitbranch': 'MyFugitiveHead',
      \   'filetype': 'MyFiletype',
      \   'fileformat': 'MyFileformat',
      \ },
      \ }

let g:indentLine_char = 'â”‚'

function MyFugitiveHead()
  let head = FugitiveHead()
  if head != ""
    let head = "\uf126 " .. head
  endif
  return head
endfunction

function! MyFiletype()
  return winwidth(0) > 70 ? (strlen(&filetype) ? &filetype . ' ' . WebDevIconsGetFileTypeSymbol() : 'no ft') : ''
endfunction

function! MyFileformat()
  return winwidth(0) > 70 ? (&fileformat . ' ' . WebDevIconsGetFileFormatSymbol()) : ''
endfunction

"VIM GIST CONFIG"
let g:github_user = gh_user
let g:gist_token = gh_token

"VIM MARKDOWN CONFIG"
let g:vim_markdown_folding_disabled = 1

"FZF CONFIG"
let $FZF_DEFAULT_COMMAND='find . \( -name node_modules -o -name tmp -o -name .git \) -prune -o -print'

"KEYBOARD MAPPING CONFIG"
nnoremap <C-Left> :tabprevious <CR>
nnoremap <C-Right> :tabnext <CR>
nnoremap <C-T> :tabnew <CR>
nnoremap <C-F> :FZF <CR>
nnoremap <C-N> :NERDTreeToggle <CR>
nnoremap <C-L> :NERDTreeFind <CR>
nnoremap <C-P> :Prettier <CR>
nnoremap <C-E> :e! <CR>
nnoremap <C-X> :x <CR>
nnoremap <C-O> :w <CR>
nnoremap <Bar> :vsplit <CR>
nnoremap _ :split <CR>
nnoremap <C-K> :Gist -l <CR>
vnoremap <C-U> :s#_\(\l\)#\u\1#g <CR>
vnoremap <C-D> :s#-\(\l\)#\u\1#g <CR>
vnoremap <S-U> :s/\(\l\)\(\u\)/\1_\l\2/g <CR>
vnoremap <S-D> :s/\(\l\)\(\u\)/\1-\l\2/g <CR>
